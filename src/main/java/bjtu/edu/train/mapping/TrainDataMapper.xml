<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="bjtu.edu.train.dao.TrainDataMapper" >
  <resultMap id="BaseResultMap" type="bjtu.edu.train.model.TrainData" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="file_Name" property="fileName" jdbcType="VARCHAR" />
    <result column="start_Station" property="startStation" jdbcType="VARCHAR" />
    <result column="end_Station" property="endStation" jdbcType="VARCHAR" />
    <result column="speed" property="speed" jdbcType="DOUBLE" />
    <result column="slope" property="slope" jdbcType="DOUBLE" />
    <result column="traction" property="traction" jdbcType="DOUBLE" />
    <result column="power" property="power" jdbcType="DOUBLE" />
    <result column="info" property="info" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, file_Name, start_Station, end_Station, speed, slope, traction, power, info
  </sql>
  <!-- ************************************** -->
  <insert id="addTrainRecordBatch" parameterType="java.util.List">
        <selectKey resultType="java.lang.Integer" order="BEFORE" keyProperty="id">
        SELECT LAST_INSERT_ID() AS id
        </selectKey>
      insert into train_data(file_Name,start_Station,end_Station,speed,slope,traction,power,info) 
      values 
      <foreach collection="list" item="item" index="index" separator="," >
      (#{item.fileName},#{item.startStation},#{item.endStation},#{item.speed},#{item.slope},#{item.traction},#{item.power},#{item.info})
      </foreach>
  </insert> 
   <!-- ************************************** -->
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="bjtu.edu.train.model.TrainDataExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from train_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from train_data
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from train_data
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="bjtu.edu.train.model.TrainDataExample" >
    delete from train_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="bjtu.edu.train.model.TrainData" >
    insert into train_data (id, file_Name, start_Station, 
      end_Station, speed, slope, 
      traction, power, info
      )
    values (#{id,jdbcType=INTEGER}, #{fileName,jdbcType=VARCHAR}, #{startStation,jdbcType=VARCHAR}, 
      #{endStation,jdbcType=VARCHAR}, #{speed,jdbcType=DOUBLE}, #{slope,jdbcType=DOUBLE}, 
      #{traction,jdbcType=DOUBLE}, #{power,jdbcType=DOUBLE}, #{info,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="bjtu.edu.train.model.TrainData" >
    insert into train_data
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fileName != null" >
        file_Name,
      </if>
      <if test="startStation != null" >
        start_Station,
      </if>
      <if test="endStation != null" >
        end_Station,
      </if>
      <if test="speed != null" >
        speed,
      </if>
      <if test="slope != null" >
        slope,
      </if>
      <if test="traction != null" >
        traction,
      </if>
      <if test="power != null" >
        power,
      </if>
      <if test="info != null" >
        info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fileName != null" >
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="startStation != null" >
        #{startStation,jdbcType=VARCHAR},
      </if>
      <if test="endStation != null" >
        #{endStation,jdbcType=VARCHAR},
      </if>
      <if test="speed != null" >
        #{speed,jdbcType=DOUBLE},
      </if>
      <if test="slope != null" >
        #{slope,jdbcType=DOUBLE},
      </if>
      <if test="traction != null" >
        #{traction,jdbcType=DOUBLE},
      </if>
      <if test="power != null" >
        #{power,jdbcType=DOUBLE},
      </if>
      <if test="info != null" >
        #{info,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="bjtu.edu.train.model.TrainDataExample" resultType="java.lang.Integer" >
    select count(*) from train_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update train_data
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.fileName != null" >
        file_Name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.startStation != null" >
        start_Station = #{record.startStation,jdbcType=VARCHAR},
      </if>
      <if test="record.endStation != null" >
        end_Station = #{record.endStation,jdbcType=VARCHAR},
      </if>
      <if test="record.speed != null" >
        speed = #{record.speed,jdbcType=DOUBLE},
      </if>
      <if test="record.slope != null" >
        slope = #{record.slope,jdbcType=DOUBLE},
      </if>
      <if test="record.traction != null" >
        traction = #{record.traction,jdbcType=DOUBLE},
      </if>
      <if test="record.power != null" >
        power = #{record.power,jdbcType=DOUBLE},
      </if>
      <if test="record.info != null" >
        info = #{record.info,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update train_data
    set id = #{record.id,jdbcType=INTEGER},
      file_Name = #{record.fileName,jdbcType=VARCHAR},
      start_Station = #{record.startStation,jdbcType=VARCHAR},
      end_Station = #{record.endStation,jdbcType=VARCHAR},
      speed = #{record.speed,jdbcType=DOUBLE},
      slope = #{record.slope,jdbcType=DOUBLE},
      traction = #{record.traction,jdbcType=DOUBLE},
      power = #{record.power,jdbcType=DOUBLE},
      info = #{record.info,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="bjtu.edu.train.model.TrainData" >
    update train_data
    <set >
      <if test="fileName != null" >
        file_Name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="startStation != null" >
        start_Station = #{startStation,jdbcType=VARCHAR},
      </if>
      <if test="endStation != null" >
        end_Station = #{endStation,jdbcType=VARCHAR},
      </if>
      <if test="speed != null" >
        speed = #{speed,jdbcType=DOUBLE},
      </if>
      <if test="slope != null" >
        slope = #{slope,jdbcType=DOUBLE},
      </if>
      <if test="traction != null" >
        traction = #{traction,jdbcType=DOUBLE},
      </if>
      <if test="power != null" >
        power = #{power,jdbcType=DOUBLE},
      </if>
      <if test="info != null" >
        info = #{info,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="bjtu.edu.train.model.TrainData" >
    update train_data
    set file_Name = #{fileName,jdbcType=VARCHAR},
      start_Station = #{startStation,jdbcType=VARCHAR},
      end_Station = #{endStation,jdbcType=VARCHAR},
      speed = #{speed,jdbcType=DOUBLE},
      slope = #{slope,jdbcType=DOUBLE},
      traction = #{traction,jdbcType=DOUBLE},
      power = #{power,jdbcType=DOUBLE},
      info = #{info,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>